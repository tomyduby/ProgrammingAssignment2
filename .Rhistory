getwd()
res <- function(elt)
{ return(elt[,1])}
aa <- 1:6
maa <- matrix(aa,3,2)
maa
function(maa)
q
res(maa)
help(gl)
mean(x)
traceback()
?"<-"
getwd
getwd()
setwd("c:/f/coursera/R Programming/programmingassignment2")
dir()
source("cachematrix.R")
m1 <- matrix(c(1,2,3,4), 2, 2)
makeCacheMatrix(m1)
source("cachematrix.R")
makeCacheMatrix(m1)
x <- matrix()
x
source("cachematrix.R")
cacheSolve(m1)
mm1 <- makecacheMatrix(m1)
mm1 <- makeCacheMatrix(m1)
mm1
cacheSolve(mm1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
source("cachemean.R")
makeVector(c(1,2,3,4,5))
source("cachemean.R")
makeVector(c(1,2,3,4,5))
v1 = makeVector(c(1,2,3,4,5))
v1 <- makeVector(c(1,2,3,4,5))
v1
cachemean(v1)
cachemean(v1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm1
cacheSolve(makeCacheMatrix(m1))
cacheSolve(makeCacheMatrix(m1))
cacheSolve(makeCacheMatrix(m1))
cacheSolve(mm1)
cacheSolve(mm1)
source("cachematrix.R")
cacheSolve(mm1)
cacheSolve(mm1)
m2 <- m1 * 2
m2
m1 == m2
help("==")
all.equal(m1, m2)
identical(m1, m2)
identical(m1, m1)
source("cachematrix.R")
source("cachematrix.R")
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm1
cacheSolve(mm1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm1
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
mm2 <- makeCacheMatrix(m2)
cacheSolve(mm2)
cacheSolve(mm2)
cacheSolve(mm2)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm2 <- makeCacheMatrix(m2)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm2)
cacheSolve(mm2)
source("cachematrix.R")
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm2 <- makeCacheMatrix(m2)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm2 <- makeCacheMatrix(m2)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm2 <- makeCacheMatrix(m2)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm2 <- makeCacheMatrix(m2)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm2)
cacheSolve(mm2)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm2 <- makeCacheMatrix(m2)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm2 <- makeCacheMatrix(m2)
cacheSolve(mm1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
mm2 <- makeCacheMatrix(m2)
cacheSolve(mm2)
cacheSolve(mm2)
cacheSolve(mm1)
is.null(x1)
help(is.null)
ls()
help (ls)
ls(x1)
ls("x1")
objects()
objects("x1")
objects()
help(list)
help(alist)
help(as)
help(matrix)
help(identity)
help(unit)
help(unity)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
mm2 <- makeCacheMatrix(m2)
cacheSolve(mm2)
cacheSolve(mm2)
cacheSolve(mm1)
cacheSolve(mm2)
mm1
mm1$get()
mm1
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm2 <- makeCacheMatrix(m2)
mm3 <- mm2
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm2)
cacheSolve(mm2)
cacheSolve(mm2)
cacheSolve(mm2)
cacheSolve(mm3)
cacheSolve(mm3)
cacheSolve(mm3)
cacheSolve(mm3)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm2 <- makeCacheMatrix(m2)
mm3 <- mm2
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm2)
cacheSolve(mm2)
cacheSolve(mm2)
cacheSolve(mm3)
cacheSolve(mm3)
cacheSolve(mm3)
cacheSolve(mm1)
source("cachematrix.R")
mm1 <- makeCacheMatrix(m1)
mm2 <- makeCacheMatrix(m2)
mm3 <- mm2
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm1)
cacheSolve(mm2)
cacheSolve(mm2)
cacheSolve(mm2)
cacheSolve(mm3)
cacheSolve(mm3)
cacheSolve(mm1)
